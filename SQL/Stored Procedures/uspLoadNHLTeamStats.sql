DELIMITER //
CREATE PROCEDURE uspLoadNHLTeamStats()
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        SHOW ERRORS;
        ROLLBACK;   
    END;
    START TRANSACTION;
	INSERT INTO NHL.NHLTeamStatsbySeason(Season,
		TeamID,
		GamesPlayed,
        Wins,
        Losses,
        OT,
        Points,
        PointsPerc,
        GoalsPerGame,
        GoalsAgainstPerGame,
        EvGFGARatio,
        PowerPlayPerc,
        PowerPlayGoals,
        PowerPlayGoalsAgainst,
        PowerPlayOpportunities,
        PenaltyKillPerc,
        ShotsPerGame,
        ShotsAllowedPerGame,
        WinPercWhenScoringFirst,
        WinPercWhenOppScoringFirst,
        WinPercWhenLeadingFirstPer,
        WinPercWhenLeadingSecondPer,
        WinPercWhenOutshootingOpp,
        WinPercWhenOutshotByOpp,
        FaceoffsTaken,
        FaceoffsWon,
        FaceoffsLost,
        FaceoffWinPerc,
        ShootingPerc,
        SavePerc,
        LastUpdate,
        CreateDate)
		SELECT g.`season`,
        g.`team.id`,
		g.`stat.gamesPlayed`,
        g.`stat.wins`,
        g.`stat.losses`,
        g.`stat.ot`,
        g.`stat.pts`,
        g.`stat.ptPctg` / 100,
        g.`stat.goalsPerGame`,
        g.`stat.goalsAgainstPerGame`,
        g.`stat.evGGARatio`,
        g.`stat.powerPlayPercentage` / 100,
        g.`stat.powerPlayGoals`,
        g.`stat.powerPlayGoalsAgainst`,
        g.`stat.powerPlayOpportunities`,
        g.`stat.penaltyKillPercentage` / 100,
        g.`stat.shotsPerGame`,
        g.`stat.shotsAllowed`,
        g.`stat.winScoreFirst`,
        g.`stat.winOppScoreFirst`,
        g.`stat.winLeadFirstPer`,
        g.`stat.winLeadSecondPer`,
        g.`stat.winOutshootOpp`,
        g.`stat.winOutshotByOpp`,
        g.`stat.faceOffsTaken`,
        g.`stat.faceOffsWon`,
        g.`stat.faceOffsLost`,
        g.`stat.faceOffWinPercentage` / 100,
        g.`stat.shootingPctg` / 100,
        g.`stat.savePctg`,
        NOW(),
        NOW()
        FROM NHLStaging.NHLTeamStats g
	ON DUPLICATE KEY
        UPDATE
		GamesPlayed = g.`stat.gamesPlayed`,
        Wins = g.`stat.wins`,
        Losses = g.`stat.losses`,
        OT = g.`stat.ot`,
        Points = g.`stat.pts`,
        PointsPerc = g.`stat.ptPctg` / 100,
        GoalsPerGame = g.`stat.goalsPerGame`,
        GoalsAgainstPerGame = g.`stat.goalsAgainstPerGame`,
        EvGFGARatio = g.`stat.evGGARatio`,
        PowerPlayPerc = g.`stat.powerPlayPercentage` / 100,
        PowerPlayGoals = g.`stat.powerPlayGoals`,
        PowerPlayGoalsAgainst = g.`stat.powerPlayGoalsAgainst`,
        PowerPlayOpportunities = g.`stat.powerPlayOpportunities`,
        PenaltyKillPerc = g.`stat.penaltyKillPercentage` / 100,
        ShotsPerGame = g.`stat.shotsPerGame`,
        ShotsAllowedPerGame = g.`stat.shotsAllowed`,
        WinPercWhenScoringFirst = g.`stat.winScoreFirst`,
        WinPercWhenOppScoringFirst = g.`stat.winOppScoreFirst`,
        WinPercWhenLeadingFirstPer = g.`stat.winLeadFirstPer`,
        WinPercWhenLeadingSecondPer = g.`stat.winLeadSecondPer`,
        WinPercWhenOutshootingOpp = g.`stat.winOutshootOpp`,
        WinPercWhenOutshotbyOpp = g.`stat.winOutshotByOpp`,
        FaceoffsTaken = g.`stat.faceOffsTaken`,
        FaceoffsWon = g.`stat.faceOffsWon`,
        FaceoffsLost = g.`stat.faceOffsLost`,
        FaceoffWinPerc = g.`stat.faceOffWinPercentage` / 100,
        ShootingPerc = g.`stat.shootingPctg` / 100,
        SavePerc = g.`stat.savePctg`,
        LastUpdate = NOW();
	COMMIT;
END //
    